
/* HSPDLL.H  header file for HSP ver2.5 or later */

#define EXPORT extern "C" __declspec (dllexport)

#define objkazz 64
typedef struct BMSCR
{
	/* Bitmap buffer structure */
	int		flag;				/* used flag */
	int		sx;					/* X-size */
	int		sy;					/* Y-size */
	int		palmode;			/* palmode */
	HDC		hdc;				/* buffer HDC */
	BYTE	*pBit;				/* bitmap pointer */
	BITMAPINFOHEADER *pbi;		/* infoheader */
	HBITMAP	dib;				/* bitmap handle(DIB) */
	HBITMAP	old;				/* bitmap handle(OLD) */
	RGBQUAD *pal;				/* palette table */
	HPALETTE hpal;				/* palette handle */
	HPALETTE holdpal;			/* palette handle (old) */
	int		pals;				/* palette entries */
	HWND	hwnd;				/* window handle */
	HANDLE	hInst;				/* Instance of program */
	int		infsize;			/* *pbi alloc memory size */
	int		bmpsize;			/* *pBit alloc memory size */

	/* Window object setting */
	int		type;				/* setting type */
	int		wid;				/* window ID */
	short	fl_dispw;			/* display window flag */
	short	fl_udraw;			/* update draw window */
	int		wx,wy,wchg;			/* actual window size x,y */
	int		xx,yy;				/* buffer view point x,y */
	int		lx,ly;				/* buffer view size x,y */
	int		cx,cy;				/* object cursor x,y */
	int		ox,oy,py;			/* object size x,y,py */
	int		texty;				/* text Y-axis size */
	int		gx,gy,gmode;		/* gcopy size */

	HBRUSH	hbr;				/* BRUSH handle */
	HPEN	hpn;				/* PEN handle */
	HFONT	hfont;				/* FONT handle */
	HFONT	holdfon;			/* FONT handle (old) */
	COLORREF color;				/* text color code */

	HANDLE	hCld[objkazz];		/* buttonのhandle */
	int		owid[objkazz];		/* buttonのjump ID */
	int		owb;				/* handleのindex */

	int		textspeed;			/* slow text speed */
	int		cx2,cy2;			/* slow text cursor x,y */
	int		tex,tey;			/* slow text limit x,y */
	char	*prtmes;			/* slow message ptr */

} BMSCR;


typedef struct PVAL2
{
	/* Memory Val structure (ver2.5 Type) */
	short	flag;				/* type of val */
	short	mode;				/* mode (0=normal/1=clone/2=alloced) */
	int		len[5];				/* length of array 4byte align (dim) */
	int		size;				/* size of Val (not used) */
	char	*pt;				/* (direct val) or (ptr to array) */
} PVAL2;

/* master value of memory ptr. */

typedef struct PVAL
{
	/* Memory Val structure (Old Type) */
	short	flag;				/* type of val */
	short	mode;				/* mode (0=normal/1=clone/2=alloced) */
	short	len[5];				/* length of array 4byte align (dim) */
	short	version;			/* version check code (2.4 = 0) */
	char	*pt;				/* (direct val) or (ptr to array) */
	PVAL2	*realptr;			/* real ptr to ver2.5 PVAL */
} PVAL;


